@inherits NodeCircleBase

@if (ActiveNode != null && Node.NodeId == ActiveNode.NodeId)
{
    <g class="pointer"
       id="@ActiveNode.NodeId"
       @onmousedown="OnMouseDown">
        <circle cx="@ActiveNode.Xaxis"
                cy="@ActiveNode.Yaxis"
                r="@ActiveNode.Radius"
                stroke="black"
                stroke-width="2"
                fill="@ActiveNode.NodeColor" />
        <text text-anchor="middle"
              fill="@ActiveNode.LabelColor"
              font-size="@(ActiveNode.Radius/2)"
              font-family="Verdana"
              x="@ActiveNode.Xaxis"
              y="@ActiveNode.Yaxis">
            @if (ActiveNode.Label == null)
            {
                @ActiveNode.NodeId
            }
            else
            {
                @ActiveNode.Label
            }
        </text>
    </g>
    <rect x="@(ActiveNode.Xaxis-ActiveNode.Radius)"
          y="@(ActiveNode.Yaxis-ActiveNode.Radius)"
          width="@(ActiveNode.Radius*2)"
          height="@(ActiveNode.Radius*2)"
          stroke="black"
          stroke-dasharray="5,5"
          fill="none" />
}
else
{
    <g class="pointer"
       id="@Node.NodeId"
       @onmousedown="OnMouseDown">
        <circle cx="@Node.Xaxis"
                cy="@Node.Yaxis"
                r="@Node.Radius"
                stroke="black"
                stroke-width="2"
                fill="@Node.NodeColor" />
        <text text-anchor="middle"
              fill="@Node.LabelColor"
              font-size="@(Node.Radius/2)"
              font-family="Verdana"
              x="@Node.Xaxis"
              y="@Node.Yaxis">
            @if (Node.Label == null)
            {
                @Node.NodeId
            }
            else
            {
                @Node.Label
            }
        </text>
    </g>
}
