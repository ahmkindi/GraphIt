@inherits EdgeOptionsBase

<nav class="navbar sticky-top navbar-expand navbar-custom py-0 px-0">
    <div class="d-flex">
        @if (!ActiveEdges.Any())
        {
            <div class="px-2">
                Default:
            </div>
            <div class="px-1">
                <SfCheckBox @bind-Checked="DefaultOptions.Weighted" Label="Weighted" @onchange="OnDefWeightedChange" CssClass="e-small"></SfCheckBox>
                <SfCheckBox @bind-Checked="DefaultOptions.Directed" Label="Directed" @onchange="OnDefDirectedChange" CssClass="e-small"></SfCheckBox>
            </div>
            <div class="px-1">
                Width <SfNumericTextBox TValue="int?" Value="@DefaultOptions.EdgeWidth" Min=1 Max=15 Step=1 CssClass="shortInput"
                                        @onchange="((e) => OnDefWidthChange(e))"></SfNumericTextBox>
            </div>
            <div class="px-1">
                Color <SfColorPicker Value="@DefaultOptions.EdgeColor" ValueChange="OnDefEdgeColorChange"></SfColorPicker>
            </div>
            <div class="px-1">
                Label <SfColorPicker Value="@DefaultOptions.EdgeLabelColor" ValueChange="OnDefEdgeLabelColorChange"></SfColorPicker>
            </div>
        }
        else if (ActiveEdges.Count == 1)
        {
            <div class="px-2">
                Selected:
            </div>
            <div class="px-1">
                <SfCheckBox @bind-Checked="ActiveEdges.ElementAt(0).Directed" Label="Directed" @onchange="OnDirectedChange" CssClass="e-small"></SfCheckBox>
            </div>
            <div class="px-1">
                Width <SfNumericTextBox TValue="int?" Value="@ActiveEdges.ElementAt(0).Width" Min=1 Max=15 Step=1 CssClass="shortInput"
                                        @onchange="((e) => OnWidthChange(e))"></SfNumericTextBox>
            </div>
            <div class="px-1">
                Color <SfColorPicker Value="@ActiveEdges.ElementAt(0).EdgeColor" ValueChange="OnEdgeColorChange"></SfColorPicker>
            </div>
            <div class="px-1">
                Label
                <SfTextBox CssClass="shortInput" ValueChange="OnEdgeLabelChange" Value="@ActiveEdges.ElementAt(0).Label"></SfTextBox>
                <SfColorPicker Value="@ActiveEdges.ElementAt(0).LabelColor" ValueChange="OnEdgeLabelColorChange"></SfColorPicker>
            </div>
            <div class="px-1">
                <span class="px-2 btn-group" role="group">
                    <button type="button" class="btn NavNone shadow-none py-0" @onclick="@(() => OnCurve(0.1))">-</button>
                    Curve
                    <button type="button" class="btn NavNone shadow-none py-0" @onclick="@(() => OnCurve(-0.1))">+</button>
                </span>
            </div>
            @if (DefaultOptions.Weighted)
            {
                <div class="px-1">
                    Weight <SfNumericTextBox Value="@ActiveEdges.ElementAt(0).Weight" Min=1 ShowSpinButton=false CssClass="shortInput" @onchange="((e) => OnWeightChange(e))"></SfNumericTextBox>
                </div>
            }
        }
        else
        {
            <div class="px-2">
                Selected:
            </div>
            <div class="px-1">
                <SfCheckBox TChecked="bool" Label="Directed" @onchange="OnManyDirectedChange" CssClass="e-small"></SfCheckBox>
            </div>
            <div class="px-1">
                Width <SfNumericTextBox TValue="int?" Min=1 Max=15 Step=1 CssClass="shortInput" @onchange="((e) => OnWidthChange(e))"></SfNumericTextBox>
            </div>
            <div class="px-1">
                Color <SfColorPicker ValueChange="OnEdgeColorChange"></SfColorPicker>
            </div>
            <div class="px-1">
                Label
                <SfTextBox CssClass="shortInput" ValueChange="OnEdgeLabelChange"></SfTextBox>
                <SfColorPicker ValueChange="OnEdgeLabelColorChange"></SfColorPicker>
            </div>
            <div class="px-1">
                Curve
                <SfButton CssClass="e-round" IconCss="e-icons e-plus-icon" IsPrimary="true" IsToggle="true" @onclick="(() => OnCurve(0.1))"></SfButton>
                <SfButton CssClass="e-round" IconCss="e-icons e-plus-icon" IsPrimary="true" IsToggle="true" @onclick="(() => OnCurve(-0.1))"></SfButton>
            </div>
            @if (DefaultOptions.Weighted)
            {
                <div class="px-1">
                    Weight <SfNumericTextBox Min=1 ShowSpinButton=false CssClass="shortInput" @onchange="((e) => OnWeightChange(e))"></SfNumericTextBox>
                </div>
            }
        }
    </div>
</nav>