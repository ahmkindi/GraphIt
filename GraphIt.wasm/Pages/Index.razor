@page "/"
@inherits IndexBase
@if (Browser == null)
{
    SVGControl.Width = 0;
    SVGControl.Height = 0;
}
else
{
    SVGControl.Width = Browser.Width * SVGControl.Scale;
    SVGControl.Height = Browser.Height * SVGControl.Scale;
}
<NavBar @bind-Choice="Choice"></NavBar>


@if (Choice != null)
{
<nav class="navbar sticky-top navbar-expand navbar-custom p-0">
    <ul class="navbar-nav mr-auto m-0">
        @switch (Choice)
        {
            case NavChoice.File:
                <File @bind-Options="Options" SVGControl="SVGControl" @bind-Graph="Graph" @bind-SaveAs="SaveAs"></File>
                break;
            case NavChoice.Home:
                <Home @bind-MatrixOpened="MatrixOpened" @bind-StartAlgorithm="StartAlgorithm" @bind-ActiveGraph="ActiveGraph" Graph="Graph" @bind-GraphMode="GraphMode"></Home>
                break;
            case NavChoice.Insert:
                <Insert @bind-Graph="Graph" @bind-GraphMode="GraphMode" @bind-NewEdge="NewEdge" DefaultOptions="Options.Default" SVGControl="SVGControl"></Insert>
                break;
            case NavChoice.View:
                <View @bind-SVGControl="SVGControl" @bind-ActiveGraph="ActiveGraph" Nodes="Graph.Nodes" Browser="Browser"></View>
                break;
            case NavChoice.Design:
                <Design @bind-ActiveGraph="ActiveGraph" @bind-Options="Options" Weighted="Graph.Weighted" Relabel="Relabel" DeleteActive="DeleteActive"></Design>
                break;
            case NavChoice.About:
                <About></About>
                break;
        }
    </ul>
    <ul class="navbar-nav m-0">
        <li class="NavNone p-2" @onclick="(() => Choice = null)"><span class="oi oi-x"></span></li>
    </ul>
</nav>
}
@if (MatrixOpened)
{
    <AdjMatrix @bind-MatrixOpened="MatrixOpened" @bind-Graph="Graph" DefaultOptions="Options.Default" SVGControl="SVGControl"></AdjMatrix>
}
<Canvas @bind-ActiveGraph="ActiveGraph" @bind-Graph="Graph" ChangeMenu="UpdateChoice" @bind-NewEdge="NewEdge" @bind-AlgoExplain="AlgoExplain" DeleteActive="DeleteActive"
        Options="Options" GraphMode="GraphMode" GraphModeChanged="GraphModeChanged" @bind-SVGControl="SVGControl" @bind-StartAlgorithm="StartAlgorithm" @bind-SaveAs="SaveAs"></Canvas>

@if (StartAlgorithm.Done)
{
    <AlgoFooter @bind-AlgoExplain="AlgoExplain"></AlgoFooter>
}
else
{
    <Footer @bind-Graph="Graph" GraphMode="GraphMode"></Footer>
}
